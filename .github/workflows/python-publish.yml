# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_dispatch:
    inputs:
        logLevel:
          description: 'Log level'     
          required: false
          default: 'warning' 
          type: choice
          options:
          - info
          - warning
          - debug 
        tags:
          description: 'Test scenario tags'
          required: false 
          type: boolean
          
jobs:
  Test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest -v --cov=CodeCoverageReport 
  
  createArtifact:
   runs-on: ubuntu-latest
   needs: Test
   steps:
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: artifact
        path: |
          ${{ github.workspace }}/BasicOperation.py
          ${{ github.workspace }}/requirements.txt
          ${{ github.workspace }}/LICENSE
          ${{ github.workspace }}/README.md
        if-no-files-found: error
        retention-days: 10
  
  deployDev:
    name: Deploy to Development
    #if: github.ref_type == 'tag' 
    needs: Test
    runs-on: ubuntu-latest
    
    permissions:
      deployments: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    #- name: Build package
    #  run: python -m build

    - name: Archive files
      run: |
          sudo apt-get update
          sudo apt-get install zip
          zip -r archive.zip *
          
    - name: deployment
      uses: chrnorm/deployment-action@v2
      id: deployment
      with:
          token: '${{ github.token }}'
          environment-url: https://drive.google.com/drive/folders/1opYibO_CQTVMNVLa6r8eQgr83LUl7OhG?usp=sharing
          environment: Drive-development
