# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release
on:
  release:
    types: [released]  
  workflow_dispatch:
    inputs:
        Tag:
          description: 'Enter the tag name to use'     
          required: true 
          type: string
        Release_Name:
          description: 'Enter the release name'
          required: true 
          type: string
        Release_Note:
          description: 'Enter the release note data'
          required: false 
          type: string
        Pre_Release:
          description: 'To Do Pre-Release'
          type: boolean
          default: false
          required: false
        BuildArtifact:
          description: 'Binaries required in release'
          type: boolean
          default: false
          required: false
          
jobs:
  Test:
    uses: ./.github/workflows/PR_workflow.yml
    
  CreateRelease:
   runs-on: ubuntu-latest
   needs: Test
   steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build to Binary
      if: ${{ inputs.BuildArtifact }}
      run: |
        pyinstaller BasicOperation.py --onefile

    - name: Archive files
      if: ${{ inputs.BuildArtifact }}
      run: |
          tar cfzv Artifact-Linux.tar.gz dist/*
          
    - name: Release
      uses: softprops/action-gh-release@v0.1.14
      with: 
        # Note-worthy description of changes in release
        body: ${{ inputs.Release_Note }}
        # Gives the release a custom name. Defaults to tag name
        name: ${{ inputs.Release_Name }}
        # Gives a tag name. Defaults to github.GITHUB_REF
        tag_name: ${{ inputs.Tag }}
        # Identify the release as a prerelease. Defaults to false
        prerelease: ${{ inputs.Pre_Release }}
        # Whether to automatically generate the name and body for this release. If name is specified, the specified name will be used; otherwise, a name will be automatically generated. If body is specified, the body will be pre-pended to the automatically generated notes.
        generate_release_notes: true
        files: ${{ github.workspace }}/Artifact-Linux.tar.gz
